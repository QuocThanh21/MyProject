<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="MSI" failures="1" tests="3" name="com.demoqa.tests.BookStoreTests.ReplaceBookTest" time="2.084" errors="0" timestamp="2022-07-31T18:44:42 ICT" skipped="0">
  <testcase classname="com.demoqa.tests.BookStoreTests.ReplaceBookTest" name="replaceABookInCollectionUnsuccessfullyDueToUnexistingIsbn" time="0.669"/>
  <system-out/>
  <testcase classname="com.demoqa.tests.BookStoreTests.ReplaceBookTest" name="replaceABookInCollectionAndVerifyJsonSchemaSuccessfully" time="0.735">
    <failure message="Verify books
Expected: &quot;{\&quot;isbn\&quot;:\&quot;9781449337711\&quot;,\&quot;title\&quot;:\&quot;Designing Evolvable Web APIs with ASP.NET\&quot;,\&quot;subTitle\&quot;:\&quot;Harnessing the Power of the Web\&quot;,\&quot;author\&quot;:\&quot;Glenn Block et al.\&quot;,\&quot;publish_date\&quot;:\&quot;2020-06-04T09:12:43.000Z\&quot;,\&quot;publisher\&quot;:\&quot;O\\u0027Reilly Media\&quot;,\&quot;pages\&quot;:238,\&quot;description\&quot;:\&quot;Design and build Web APIs for a broad range of clientsâ€”including browsers and mobile devicesâ€”that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft\&quot;,\&quot;website\&quot;:\&quot;http://chimera.labs.oreilly.com/books/1234000001708/index.html\&quot;}&quot;
     but: was &quot;{\&quot;isbn\&quot;:\&quot;9781449337711\&quot;,\&quot;title\&quot;:\&quot;Designing Evolvable Web APIs with ASP.NET\&quot;,\&quot;subTitle\&quot;:\&quot;Harnessing the Power of the Web\&quot;,\&quot;author\&quot;:\&quot;Glenn Block et al.\&quot;,\&quot;publish_date\&quot;:\&quot;2020-06-04T09:12:43.000Z\&quot;,\&quot;publisher\&quot;:\&quot;O\\u0027Reilly Media\&quot;,\&quot;pages\&quot;:238,\&quot;description\&quot;:\&quot;Design and build Web APIs for a broad range of clients—including browsers and mobile devices—that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft\&quot;,\&quot;website\&quot;:\&quot;http://chimera.labs.oreilly.com/books/1234000001708/index.html\&quot;}&quot;" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Verify books
Expected: "{\"isbn\":\"9781449337711\",\"title\":\"Designing Evolvable Web APIs with ASP.NET\",\"subTitle\":\"Harnessing the Power of the Web\",\"author\":\"Glenn Block et al.\",\"publish_date\":\"2020-06-04T09:12:43.000Z\",\"publisher\":\"O\\u0027Reilly Media\",\"pages\":238,\"description\":\"Design and build Web APIs for a broad range of clientsâ€”including browsers and mobile devicesâ€”that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft\",\"website\":\"http://chimera.labs.oreilly.com/books/1234000001708/index.html\"}"
     but: was "{\"isbn\":\"9781449337711\",\"title\":\"Designing Evolvable Web APIs with ASP.NET\",\"subTitle\":\"Harnessing the Power of the Web\",\"author\":\"Glenn Block et al.\",\"publish_date\":\"2020-06-04T09:12:43.000Z\",\"publisher\":\"O\\u0027Reilly Media\",\"pages\":238,\"description\":\"Design and build Web APIs for a broad range of clients—including browsers and mobile devices—that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft\",\"website\":\"http://chimera.labs.oreilly.com/books/1234000001708/index.html\"}"
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at com.demoqa.tests.BookStoreTests.ReplaceBookTest.replaceABookInCollectionAndVerifyJsonSchemaSuccessfully(ReplaceBookTest.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </failure>
  </testcase> <!-- replaceABookInCollectionAndVerifyJsonSchemaSuccessfully -->
  <system-out/>
  <testcase classname="com.demoqa.tests.BookStoreTests.ReplaceBookTest" name="replaceABBookInCollectionUnsuccessfullyDueToUnauthorized" time="0.680"/>
  <system-out/>
</testsuite> <!-- com.demoqa.tests.BookStoreTests.ReplaceBookTest -->
